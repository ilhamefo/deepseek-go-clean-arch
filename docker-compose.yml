services:
  exporter-service:
    build:
      context: .
      dockerfile: cmd/server_exporter/Dockerfile
      args:
        GO_VERSION: 1.23
        SERVICE_NAME: exporter-service
        PORT: 5050
        VERSION: ${VERSION:-dev}
        GIT_COMMIT: ${GIT_COMMIT:-unknown}
        BUILD_DATE: ${BUILD_DATE:-unknown}
    container_name: exporter-service
    ports:
      - "5050:5050"
    environment:
      - PORT=5050
      - GO_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - REDIS_DB=0
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER:-postgres}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - DB_NAME=${POSTGRES_DB}
      - DB_SSL_MODE=disable
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - forti-vpn_vpn-network
    healthcheck:
      test: ["CMD", "/app", "--health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./logs:/app/logs:rw
      - ./files:/app/files:rw
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.exporter-service.rule=Host(`localhost`)"
      - "traefik.http.services.exporter-service.loadbalancer.server.port=5050"
  user-service:
    build:
      context: .
      dockerfile: cmd/server/Dockerfile
      args:
        GO_VERSION: 1.23
        SERVICE_NAME: user-service
        PORT: 5051
        VERSION: ${VERSION:-dev}
        GIT_COMMIT: ${GIT_COMMIT:-unknown}
        BUILD_DATE: ${BUILD_DATE:-unknown}
    container_name: user-service
    ports:
      - "5051:5051"
    environment:
      - PORT=5051
      - GO_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - REDIS_DB=0
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER:-postgres}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - DB_NAME=${POSTGRES_DB}
      - DB_SSL_MODE=disable
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - forti-vpn_vpn-network
    healthcheck:
      test: ["CMD", "/app", "--health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./logs:/app/logs:rw
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.user-service.rule=Host(`localhost`)"
      - "traefik.http.services.user-service.loadbalancer.server.port=5050"

  redis:
    image: redis:7-alpine
    container_name: auth-redis
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    volumes:
      - redis_data:/data
      - ./scripts/redis.conf:/usr/local/etc/redis/redis.conf:ro
    restart: unless-stopped
    networks:
      - forti-vpn_vpn-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    command: >
      redis-server
      --appendonly yes
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --tcp-keepalive 60
      --timeout 300

volumes:
  redis_data:
    driver: local

networks:
  forti-vpn_vpn-network:
    external: true